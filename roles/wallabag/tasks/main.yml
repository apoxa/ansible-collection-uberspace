---

- name: uberspace_wallabag | Get MySQL password.
  ansible.builtin.command: my_print_defaults client
  register: my_defaults_result
  failed_when: my_defaults_result.rc != 0
  changed_when: false
  no_log: True

- name: uberspace_wallabag | Parse MySQL password.
  ansible.builtin.set_fact:
    uberspace_mysql_password: "{{ my_defaults_result.stdout | regex_search(regex, '\\1') | first }}"
  vars:
    regex: "--password=(.*)"
  failed_when: not uberspace_mysql_password
  no_log: True

- name: uberspace_wallabag | Create database for Wallabag.
  community.mysql.mysql_db:
    name: "{{ uberspace_wallabag__database_name }}"
    login_user: "{{ ansible_facts.user_id }}"
    login_password: "{{ uberspace_mysql_password }}"
    state: present

- name: uberspace_wallabag | Clone wallabag into Document Root.
  ansible.builtin.git:
    repo: "{{ uberspace_wallabag__repository }}"
    dest: "{{ uberspace_wallabag__document_root }}"
    version: "{{ uberspace_wallabag__repository_version }}"
    update: False

- name: uberspace_wallabag | Write parameter file.
  ansible.builtin.template:
    src: parameters.yml.j2
    dest: "{{ uberspace_wallabag__document_root }}/app/config/parameters.yml"
    owner: "{{ ansible_facts.user_id }}"
    group: "{{ ansible_facts.user_id }}"
    mode: "0664"
  no_log: True
  notify: 
    - Run wallabag install.

- name: uberspace_wallabag | Remove cache.
  ansible.builtin.file:
    path: "{{ uberspace_wallabag__document_root }}/var/cache"
    state: absent
  no_log: True

- name: uberspace_wallabag | Run composer.
  ansible.builtin.shell:
    cmd: SYMFONY_ENV=prod composer install --no-dev -o --prefer-dist
    chdir: "{{ uberspace_wallabag__document_root }}"

- name: uberspace_wallabag | Configure webserver for rewrites.
  template:
    src: htaccess.j2
    dest: "{{ uberspace_wallabag__document_root }}/.htaccess"
